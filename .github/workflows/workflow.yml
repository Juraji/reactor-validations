name: CI Build

on: [ push ]

jobs:
  build:
    name: Test & Build
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.expose_version.outputs.package_version }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build with Gradle
        run: ./gradlew build

      - uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: build

      - name: Expose build version
        id: expose_version
        run: |
          package_version=$(./gradlew -q version)
          echo $package_version
          echo "::set-output name=package_version::$package_version"

  release_check:
    name: Check should create release
    runs-on: ubuntu-latest
    needs: build
    outputs:
      should_release: ${{ steps.tagged.outputs.should_release }}
    steps:
      - uses: actions/checkout@v2

      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: 'Check: Tag v${{ needs.build.outputs.package_version }} exists'
        id: tagged
        run: git show-ref --tags --verify --quiet -- "refs/tags/v${{ needs.build.outputs.package_version }}" && echo "::set-output name=should_release::0" || echo "::set-output name=should_release::1"

  release:
    name: Create Github release
    runs-on: ubuntu-latest
    needs: [build, release_check]
    if: needs.release_check.outputs.should_release == 1
    steps:
      - uses: actions/checkout@v2

      - name: Create Release v${{ needs.build.outputs.package_version }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build.outputs.package_version }}
          release_name: Release v${{ needs.build.outputs.package_version }}
          body: |
            Changes in this Release
            - ...
          draft: true
          prerelease: false

      - uses: actions/download-artifact@v2
        with:
          name: build-output

      - name: Upload Release Asset to v${{ needs.build.outputs.package_version }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./libs/reactor-validations-${{ needs.build.outputs.package_version }}.jar
          asset_name: reactor-validations-${{ needs.build.outputs.package_version }}.jar
          asset_content_type: application/java-archive

  publish:
    name: Publish to Github Packages
    runs-on: ubuntu-latest
    needs: release_check
    if: needs.release_check.outputs.should_release == 1
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle

      - uses: actions/download-artifact@v2
        with:
          name: build-output

      - name: Publish package
        run: gradle publish
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
